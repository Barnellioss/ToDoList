{"version":3,"sources":["context/alert/alertContext.js","components/Alert.js","pages/About.js","context/firebase/firebaseContext.js","components/Form.js","components/Loader.js","components/Notes.js","pages/Home.js","components/Navbar.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/FireBaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","CSSTransition","in","visible","timeout","enter","exit","classNames","mountOnEnter","unmountOnExit","className","type","text","onClick","aria-label","aria-hidden","About","class","FirebaseContext","Form","useState","value","setValue","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","onChange","e","target","placeholder","Loader","role","Notes","notes","onRemove","setDanger","TransitionGroup","component","map","note","id","htmlFor","title","date","Home","danger","fetchNotes","loading","removeNote","useEffect","Navbar","to","exact","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","handlers","state","payload","alertReducer","action","DEFAULT","AlertState","children","useReducer","dispatch","Provider","filter","firebaseReducer","url","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","key","Date","toJSON","post","name","Error","message","delete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5116e6.chunk.js","sourcesContent":["import {createContext} from 'react'\r\n\r\nexport const AlertContext = createContext()","import React, {useContext} from 'react'\r\nimport {CSSTransition} from 'react-transition-group'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n\r\nconst {alert, hide} = useContext(AlertContext)\r\n    return (\r\n        <CSSTransition in ={alert.visible} timeout={{enter: 500, exit: 350}} classNames={'alert'} mountOnEnter unmountOnExit>\r\n        <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n            <strong>Attention</strong> {alert.text}\r\n            <button onClick = {hide} type=\"button\" className=\"close\"  aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\n\r\n\r\nexport const About = () => (\r\n        <div class=\"jumbotron\">\r\n            <div class=\"container\">\r\n                <h1 class=\"display-4\">Best React App</h1>\r\n                <p class=\"lead\">Today is the most important day</p>\r\n            </div>\r\n        </div>\r\n    )\r\n","import {createContext} from 'react'\r\n\r\nexport const FirebaseContext = createContext()","import React, { useState, useContext } from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\n\r\n\r\nexport const Form = () => {\r\n\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (value.trim()) {\r\n            firebase.addNote(value.trim()).then(() => {\r\n              alert.show('Note has been created', 'success')\r\n            }).catch(() => {\r\n              alert.show('Something went wrong', 'danger')\r\n            })\r\n            setValue('')\r\n          }       \r\n          else {\r\n            alert.show('Enter note')\r\n          }\r\n        }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type='text'\r\n                    value={value}\r\n                    onChange={e => setValue(e.target.value)}\r\n                    className=\"form-control bg-dark text-white\"\r\n                    placeholder='Enter Note' />\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport const Loader = () => (\r\n    <div className=\"text-center\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n)\r\n","import React, { useContext, useState } from 'react'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\n\r\nexport const Notes = ({ notes, onRemove }) => {\r\n\r\n    const [value, setDanger] = useState('')\r\n    const alert = useContext(AlertContext)\r\n\r\n    if (value.trim()) {\r\n        onRemove(value).then(() => {\r\n            alert.show('Note has been deleted', 'danger')\r\n        })\r\n        setDanger('')\r\n    }\r\n\r\n    return (\r\n        <TransitionGroup className=\"list-group\" component={'ul'}>\r\n            {notes.map(note => (\r\n                <CSSTransition classNames={'note'} timeout={800} key={note.id}>\r\n                    <li key={note + 1} className=\"list-group-item note bg-dark\">\r\n                        <div className=\"d-flex aligh-items-center form-check\">\r\n                            <input className=\"form-check-input big-checkbox\" type=\"checkbox\" value=\"\" id={note.id} />\r\n                            <label htmlFor={note.id} className=\"text-white mr-3 fs-4 fw-normal font-Segoe-UI label\">{note.title}</label>\r\n                            <label htmlFor={note.id} className=\"text-white mr-1 font-Segoe-UI label\">{note.date}</label>\r\n                        </div>\r\n                        <button onClick={() => setDanger(note.id)} type=\"button\" className=\"btn btn-outline-danger btn-sm\">&times;</button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))}\r\n        </TransitionGroup>\r\n    )\r\n}","import React, { Fragment, useContext, useEffect } from 'react'\r\nimport { Form } from '../components/Form'\r\nimport { Loader } from '../components/Loader'\r\nimport { Notes } from '../components/Notes'\r\nimport { FirebaseContext } from '../context/firebase/firebaseContext'\r\n\r\n\r\nexport const Home = () => {\r\n    const { notes, danger, fetchNotes, loading,  removeNote} = useContext(FirebaseContext)\r\n    useEffect(() => { \r\n        fetchNotes()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <Form />\r\n            <hr />\r\n            {loading ? <Loader />\r\n                :\r\n                <Notes notes={notes} danger={danger} onRemove={removeNote} />\r\n            }\r\n        </Fragment>\r\n    )\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { About } from '../pages/About'\r\nimport { Home } from '../pages/Home'\r\n\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark navbar-expand-lg bg-dark\">\r\n        <div className=\"navbar-brand\">\r\n            Note App\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to= '/' exact>Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to='/about'>About</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)","export const SHOW_ALERT = \"SHOW_ALERT\"\r\nexport const HIDE_ALERT = \"HIDE_ALERT\"\r\nexport const SHOW_LOADER = \"SHOW_LOADER\"\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const FETCH_NOTES = \"FETCH_NOTES\"\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\"\r\nexport const REACT_APP_DB_URL = 'https://react-hooks-7c521-default-rtdb.europe-west1.firebasedatabase.app'\r\nexport const DONE_TASK = 'DONE_TASK'\r\n\r\n\r\n\r\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT] : (state, {payload}) => ({\r\n        ...payload,\r\n        visible: true\r\n    }),\r\n    [HIDE_ALERT]: state => ({\r\n        ...state,\r\n        visible:false\r\n    }),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\n\r\nexport const AlertState = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(alertReducer, { visible: false })\r\n\r\n    const show = (text, type = 'warning') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            payload: {text, type}\r\n        })\r\n    }\r\n\r\n    const hide = () =>\r\n        dispatch({\r\n            type: HIDE_ALERT,\r\n        })\r\n\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ show, hide, alert: state }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { ADD_NOTE,  DONE_TASK,  FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SHOW_LOADER] : state => ({\r\n        ...state,\r\n        loading: true\r\n    }),\r\n    [ADD_NOTE] : (state, {payload}) => ({\r\n        ...state,\r\n        danger: false,\r\n        notes: [...state.notes, payload]\r\n    }),\r\n    [FETCH_NOTES] : (state, {payload}) => ({\r\n        ...state,\r\n        notes: payload,\r\n        loading: false\r\n    }),\r\n    [REMOVE_NOTE] : (state, {payload}) => ({\r\n        ...state,\r\n        notes: state.notes.filter(note => note.id !== payload),\r\n        danger: true\r\n    }),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(state, action)\r\n}","import React, { useReducer } from 'react'\r\nimport axios from 'axios'\r\nimport { FirebaseContext } from './firebaseContext'\r\nimport { firebaseReducer } from './firebaseReducer'\r\nimport { ADD_NOTE, DONE_TASK, FETCH_NOTES, REACT_APP_DB_URL, REMOVE_NOTE, SHOW_LOADER } from '../types'\r\n\r\nconst url = REACT_APP_DB_URL\r\n\r\nexport const FirebaseState = ({ children }) => {\r\n    const initialState = {\r\n        notes: [],\r\n        loading: false,\r\n        danger: false\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => dispatch({ type: SHOW_LOADER })\r\n\r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const res = await axios.get(`${url}/notes.json`)\r\n        const payload = Object.keys(res.data || {}).map(key => {\r\n            return{\r\n                ...res.data[key],\r\n                id: key\r\n            }\r\n        })\r\n        dispatch({type: FETCH_NOTES, payload})\r\n    }\r\n\r\n    const addNote = async title => {\r\n        const note = {\r\n            title, date: new Date().toJSON()\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const payload = {\r\n                ...note,\r\n                id: res.data.name\r\n            }\r\n            dispatch({\r\n                type: ADD_NOTE,\r\n                payload\r\n            })\r\n        }\r\n        catch (e) {\r\n            throw new Error(e.message)\r\n        }\r\n    }\r\n\r\n\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispatch({type: REMOVE_NOTE, payload: id})\r\n    }\r\n\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, fetchNotes, addNote, removeNote, loading: state.loading, notes: state.notes, danger: state.danger\r\n        }}>\r\n            {children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}\r\n\r\n","import { Alert } from './components/Alert';\nimport React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Navbar } from './components/Navbar';\nimport { About } from './pages/About';\nimport { Home } from './pages/Home';\nimport { AlertState } from './context/alert/AlertState';\nimport { FirebaseState } from './context/firebase/FireBaseState';\n\n\nfunction App() {\n  return (\n    <FirebaseState>\n      <AlertState>\n        <BrowserRouter>\n          <Navbar />\n          <div className=\"container pt-4\">\n            <Alert />\n            <Switch>\n              <Route path={'/'} exact component={Home} />\n              <Route path={'/about'} component={About} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </FirebaseState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}